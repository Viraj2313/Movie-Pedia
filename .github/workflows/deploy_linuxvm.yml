name: CI/CD Pipeline
on:
  push:
    branches:
      - master
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push python recommender Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./movie-recommender/Dockerfile
          platforms: linux/arm64
          push: true
          tags: viraj231/python_recommender:latest
          build-args: |
            API_URL=${{ secrets.API_URL }}
            API_KEY=${{ secrets.OMDB_API_KEY }}

      - name: Build and push MovieApiApp Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./MovieApiApp/Dockerfile
          platforms: linux/arm64
          push: true
          tags: viraj231/movieapiapp:latest
      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          platforms: linux/arm64
          push: true
          tags: viraj231/frontend:latest
          build-args: |
            VITE_GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.VM_SSH_PRIVATE_KEY }}

      - name: Add VM to known hosts
        run: |
          ssh-keyscan -H ${{ secrets.VM_IP }} >> ~/.ssh/known_hosts

      - name: Create .env file
        run: |
          echo "LINUX_DB_CONN_STRING=${{ secrets.LINUX_DB_CONN_STRING }}" > .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
          echo "OMDB_API_KEY=${{ secrets.OMDB_API_KEY }}" >> .env
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env

      - name: Copy .env and docker-compose to VM
        run: |
          scp .env ubuntu@${{ secrets.VM_IP }}:/home/ubuntu/moviepedia/.env
          scp ./docker-compose.yml ubuntu@${{ secrets.VM_IP }}:/home/ubuntu/moviepedia/docker-compose.yml

      - name: Deploy to Linux VM
        run: |
          ssh ubuntu@${{ secrets.VM_IP }} << EOF
          cd /home/ubuntu/moviepedia
          docker compose pull
          docker compose down
          docker compose up -d
          EOF
